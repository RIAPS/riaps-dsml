/*
 * generated by Xtext 2.10.0
 */
package edu.vanderbilt.riaps.serializer;

import com.google.inject.Inject;
import edu.vanderbilt.riaps.services.AppGrammarAccess;
import java.util.List;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.IGrammarAccess;
import org.eclipse.xtext.RuleCall;
import org.eclipse.xtext.nodemodel.INode;
import org.eclipse.xtext.serializer.analysis.GrammarAlias.AbstractElementAlias;
import org.eclipse.xtext.serializer.analysis.GrammarAlias.TokenAlias;
import org.eclipse.xtext.serializer.analysis.ISyntacticSequencerPDAProvider.ISynNavigable;
import org.eclipse.xtext.serializer.analysis.ISyntacticSequencerPDAProvider.ISynTransition;
import org.eclipse.xtext.serializer.sequencer.AbstractSyntacticSequencer;

@SuppressWarnings("all")
public class AppSyntacticSequencer extends AbstractSyntacticSequencer {

	protected AppGrammarAccess grammarAccess;
	protected AbstractElementAlias match_Actor_SemicolonKeyword_4_0_3_q;
	protected AbstractElementAlias match_Actor_SemicolonKeyword_4_1_3_q;
	protected AbstractElementAlias match_Actor_SemicolonKeyword_4_2_3_q;
	protected AbstractElementAlias match_Artifact_SemicolonKeyword_4_q;
	protected AbstractElementAlias match_ClntPort_SemicolonKeyword_10_q;
	protected AbstractElementAlias match_CollocateConstraint_SemicolonKeyword_3_q;
	protected AbstractElementAlias match_DistributeConstraint_SemicolonKeyword_3_q;
	protected AbstractElementAlias match_InsPort_SemicolonKeyword_3_q;
	protected AbstractElementAlias match_Instance_SemicolonKeyword_4_q;
	protected AbstractElementAlias match_Message_SemicolonKeyword_5_q;
	protected AbstractElementAlias match_PubPort_SemicolonKeyword_5_q;
	protected AbstractElementAlias match_ReqPort_SemicolonKeyword_10_q;
	protected AbstractElementAlias match_Requirement_SemicolonKeyword_2_q;
	protected AbstractElementAlias match_SrvPort_SemicolonKeyword_9_q;
	protected AbstractElementAlias match_SubPort_SemicolonKeyword_5_q;
	protected AbstractElementAlias match_TimPort_SemicolonKeyword_3_q;
	protected AbstractElementAlias match_Wire_SemicolonKeyword_2_q;
	
	@Inject
	protected void init(IGrammarAccess access) {
		grammarAccess = (AppGrammarAccess) access;
		match_Actor_SemicolonKeyword_4_0_3_q = new TokenAlias(false, true, grammarAccess.getActorAccess().getSemicolonKeyword_4_0_3());
		match_Actor_SemicolonKeyword_4_1_3_q = new TokenAlias(false, true, grammarAccess.getActorAccess().getSemicolonKeyword_4_1_3());
		match_Actor_SemicolonKeyword_4_2_3_q = new TokenAlias(false, true, grammarAccess.getActorAccess().getSemicolonKeyword_4_2_3());
		match_Artifact_SemicolonKeyword_4_q = new TokenAlias(false, true, grammarAccess.getArtifactAccess().getSemicolonKeyword_4());
		match_ClntPort_SemicolonKeyword_10_q = new TokenAlias(false, true, grammarAccess.getClntPortAccess().getSemicolonKeyword_10());
		match_CollocateConstraint_SemicolonKeyword_3_q = new TokenAlias(false, true, grammarAccess.getCollocateConstraintAccess().getSemicolonKeyword_3());
		match_DistributeConstraint_SemicolonKeyword_3_q = new TokenAlias(false, true, grammarAccess.getDistributeConstraintAccess().getSemicolonKeyword_3());
		match_InsPort_SemicolonKeyword_3_q = new TokenAlias(false, true, grammarAccess.getInsPortAccess().getSemicolonKeyword_3());
		match_Instance_SemicolonKeyword_4_q = new TokenAlias(false, true, grammarAccess.getInstanceAccess().getSemicolonKeyword_4());
		match_Message_SemicolonKeyword_5_q = new TokenAlias(false, true, grammarAccess.getMessageAccess().getSemicolonKeyword_5());
		match_PubPort_SemicolonKeyword_5_q = new TokenAlias(false, true, grammarAccess.getPubPortAccess().getSemicolonKeyword_5());
		match_ReqPort_SemicolonKeyword_10_q = new TokenAlias(false, true, grammarAccess.getReqPortAccess().getSemicolonKeyword_10());
		match_Requirement_SemicolonKeyword_2_q = new TokenAlias(false, true, grammarAccess.getRequirementAccess().getSemicolonKeyword_2());
		match_SrvPort_SemicolonKeyword_9_q = new TokenAlias(false, true, grammarAccess.getSrvPortAccess().getSemicolonKeyword_9());
		match_SubPort_SemicolonKeyword_5_q = new TokenAlias(false, true, grammarAccess.getSubPortAccess().getSemicolonKeyword_5());
		match_TimPort_SemicolonKeyword_3_q = new TokenAlias(false, true, grammarAccess.getTimPortAccess().getSemicolonKeyword_3());
		match_Wire_SemicolonKeyword_2_q = new TokenAlias(false, true, grammarAccess.getWireAccess().getSemicolonKeyword_2());
	}
	
	@Override
	protected String getUnassignedRuleCallToken(EObject semanticObject, RuleCall ruleCall, INode node) {
		return "";
	}
	
	
	@Override
	protected void emitUnassignedTokens(EObject semanticObject, ISynTransition transition, INode fromNode, INode toNode) {
		if (transition.getAmbiguousSyntaxes().isEmpty()) return;
		List<INode> transitionNodes = collectNodes(fromNode, toNode);
		for (AbstractElementAlias syntax : transition.getAmbiguousSyntaxes()) {
			List<INode> syntaxNodes = getNodesFor(transitionNodes, syntax);
			if (match_Actor_SemicolonKeyword_4_0_3_q.equals(syntax))
				emit_Actor_SemicolonKeyword_4_0_3_q(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_Actor_SemicolonKeyword_4_1_3_q.equals(syntax))
				emit_Actor_SemicolonKeyword_4_1_3_q(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_Actor_SemicolonKeyword_4_2_3_q.equals(syntax))
				emit_Actor_SemicolonKeyword_4_2_3_q(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_Artifact_SemicolonKeyword_4_q.equals(syntax))
				emit_Artifact_SemicolonKeyword_4_q(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_ClntPort_SemicolonKeyword_10_q.equals(syntax))
				emit_ClntPort_SemicolonKeyword_10_q(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_CollocateConstraint_SemicolonKeyword_3_q.equals(syntax))
				emit_CollocateConstraint_SemicolonKeyword_3_q(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_DistributeConstraint_SemicolonKeyword_3_q.equals(syntax))
				emit_DistributeConstraint_SemicolonKeyword_3_q(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_InsPort_SemicolonKeyword_3_q.equals(syntax))
				emit_InsPort_SemicolonKeyword_3_q(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_Instance_SemicolonKeyword_4_q.equals(syntax))
				emit_Instance_SemicolonKeyword_4_q(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_Message_SemicolonKeyword_5_q.equals(syntax))
				emit_Message_SemicolonKeyword_5_q(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_PubPort_SemicolonKeyword_5_q.equals(syntax))
				emit_PubPort_SemicolonKeyword_5_q(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_ReqPort_SemicolonKeyword_10_q.equals(syntax))
				emit_ReqPort_SemicolonKeyword_10_q(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_Requirement_SemicolonKeyword_2_q.equals(syntax))
				emit_Requirement_SemicolonKeyword_2_q(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_SrvPort_SemicolonKeyword_9_q.equals(syntax))
				emit_SrvPort_SemicolonKeyword_9_q(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_SubPort_SemicolonKeyword_5_q.equals(syntax))
				emit_SubPort_SemicolonKeyword_5_q(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_TimPort_SemicolonKeyword_3_q.equals(syntax))
				emit_TimPort_SemicolonKeyword_3_q(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_Wire_SemicolonKeyword_2_q.equals(syntax))
				emit_Wire_SemicolonKeyword_2_q(semanticObject, getLastNavigableState(), syntaxNodes);
			else acceptNodes(getLastNavigableState(), syntaxNodes);
		}
	}

	/**
	 * Ambiguous syntax:
	 *     ';'?
	 *
	 * This ambiguous syntax occurs at:
	 *     locals+=[Message|FQN] (ambiguity) 'critical' criticals+=[Message|FQN]
	 *     locals+=[Message|FQN] (ambiguity) 'internal' internals+=[Message|FQN]
	 *     locals+=[Message|FQN] (ambiguity) 'local' locals+=[Message|FQN]
	 *     locals+=[Message|FQN] (ambiguity) compsection=InstanceSection
	 */
	protected void emit_Actor_SemicolonKeyword_4_0_3_q(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     ';'?
	 *
	 * This ambiguous syntax occurs at:
	 *     internals+=[Message|FQN] (ambiguity) 'critical' criticals+=[Message|FQN]
	 *     internals+=[Message|FQN] (ambiguity) 'internal' internals+=[Message|FQN]
	 *     internals+=[Message|FQN] (ambiguity) 'local' locals+=[Message|FQN]
	 *     internals+=[Message|FQN] (ambiguity) compsection=InstanceSection
	 */
	protected void emit_Actor_SemicolonKeyword_4_1_3_q(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     ';'?
	 *
	 * This ambiguous syntax occurs at:
	 *     criticals+=[Message|FQN] (ambiguity) 'critical' criticals+=[Message|FQN]
	 *     criticals+=[Message|FQN] (ambiguity) 'internal' internals+=[Message|FQN]
	 *     criticals+=[Message|FQN] (ambiguity) 'local' locals+=[Message|FQN]
	 *     criticals+=[Message|FQN] (ambiguity) compsection=InstanceSection
	 */
	protected void emit_Actor_SemicolonKeyword_4_2_3_q(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     ';'?
	 *
	 * This ambiguous syntax occurs at:
	 *     path=STRING (ambiguity) (rule end)
	 */
	protected void emit_Artifact_SemicolonKeyword_4_q(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     ';'?
	 *
	 * This ambiguous syntax occurs at:
	 *     deadline=Deadline ')' (ambiguity) (rule end)
	 *     ratelimit=RateLimit (ambiguity) (rule end)
	 *     rep_type=[Message|FQN] ')' (ambiguity) (rule end)
	 */
	protected void emit_ClntPort_SemicolonKeyword_10_q(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     ';'?
	 *
	 * This ambiguous syntax occurs at:
	 *     actors+=[Actor|FQN] (ambiguity) (rule end)
	 */
	protected void emit_CollocateConstraint_SemicolonKeyword_3_q(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     ';'?
	 *
	 * This ambiguous syntax occurs at:
	 *     actors+=[Actor|FQN] (ambiguity) (rule end)
	 */
	protected void emit_DistributeConstraint_SemicolonKeyword_3_q(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     ';'?
	 *
	 * This ambiguous syntax occurs at:
	 *     name=ID (ambiguity) (rule end)
	 *     spec?='default' (ambiguity) (rule end)
	 */
	protected void emit_InsPort_SemicolonKeyword_3_q(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     ';'?
	 *
	 * This ambiguous syntax occurs at:
	 *     actuals+=Actual ')' (ambiguity) (rule end)
	 *     type=[Component|FQN] (ambiguity) (rule end)
	 */
	protected void emit_Instance_SemicolonKeyword_4_q(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     ';'?
	 *
	 * This ambiguous syntax occurs at:
	 *     key=[FField|FQN] (ambiguity) (rule end)
	 *     type=[FStructType|FQN] (ambiguity) (rule end)
	 */
	protected void emit_Message_SemicolonKeyword_5_q(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     ';'?
	 *
	 * This ambiguous syntax occurs at:
	 *     ratelimit=RateLimit (ambiguity) (rule end)
	 *     type=[Message|FQN] (ambiguity) (rule end)
	 */
	protected void emit_PubPort_SemicolonKeyword_5_q(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     ';'?
	 *
	 * This ambiguous syntax occurs at:
	 *     deadline=Deadline ')' (ambiguity) (rule end)
	 *     ratelimit=RateLimit (ambiguity) (rule end)
	 *     rep_type=[Message|FQN] ')' (ambiguity) (rule end)
	 */
	protected void emit_ReqPort_SemicolonKeyword_10_q(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     ';'?
	 *
	 * This ambiguous syntax occurs at:
	 *     artifactrequirement=[Artifact|FQN] (ambiguity) (rule end)
	 *     deviceRequirement=STRING (ambiguity) (rule end)
	 *     memoryunit=MemoryUnits (ambiguity) (rule end)
	 *     storageunit=MemoryUnits (ambiguity) (rule end)
	 */
	protected void emit_Requirement_SemicolonKeyword_2_q(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     ';'?
	 *
	 * This ambiguous syntax occurs at:
	 *     ratelimit=RateLimit (ambiguity) (rule end)
	 *     rep_type=[Message|FQN] ')' (ambiguity) (rule end)
	 */
	protected void emit_SrvPort_SemicolonKeyword_9_q(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     ';'?
	 *
	 * This ambiguous syntax occurs at:
	 *     ratelimit=RateLimit (ambiguity) (rule end)
	 *     type=[Message|FQN] (ambiguity) (rule end)
	 */
	protected void emit_SubPort_SemicolonKeyword_5_q(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     ';'?
	 *
	 * This ambiguous syntax occurs at:
	 *     unit=TimeUnit (ambiguity) (rule end)
	 */
	protected void emit_TimPort_SemicolonKeyword_3_q(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     ';'?
	 *
	 * This ambiguous syntax occurs at:
	 *     server=[SrvPort|FQN] (ambiguity) (rule end)
	 */
	protected void emit_Wire_SemicolonKeyword_2_q(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
}
