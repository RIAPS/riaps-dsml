/**
 * generated by Xtext 2.10.0
 */
package edu.vanderbilt.riaps.app.util;

import edu.vanderbilt.riaps.app.*;

import org.eclipse.emf.common.notify.Adapter;
import org.eclipse.emf.common.notify.Notifier;

import org.eclipse.emf.common.notify.impl.AdapterFactoryImpl;

import org.eclipse.emf.ecore.EObject;

/**
 * <!-- begin-user-doc -->
 * The <b>Adapter Factory</b> for the model.
 * It provides an adapter <code>createXXX</code> method for each class of the model.
 * <!-- end-user-doc -->
 * @see edu.vanderbilt.riaps.app.AppPackage
 * @generated
 */
public class AppAdapterFactory extends AdapterFactoryImpl
{
  /**
   * The cached model package.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected static AppPackage modelPackage;

  /**
   * Creates an instance of the adapter factory.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public AppAdapterFactory()
  {
    if (modelPackage == null)
    {
      modelPackage = AppPackage.eINSTANCE;
    }
  }

  /**
   * Returns whether this factory is applicable for the type of the object.
   * <!-- begin-user-doc -->
   * This implementation returns <code>true</code> if the object is either the model's package or is an instance object of the model.
   * <!-- end-user-doc -->
   * @return whether this factory is applicable for the type of the object.
   * @generated
   */
  @Override
  public boolean isFactoryForType(Object object)
  {
    if (object == modelPackage)
    {
      return true;
    }
    if (object instanceof EObject)
    {
      return ((EObject)object).eClass().getEPackage() == modelPackage;
    }
    return false;
  }

  /**
   * The switch that delegates to the <code>createXXX</code> methods.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected AppSwitch<Adapter> modelSwitch =
    new AppSwitch<Adapter>()
    {
      @Override
      public Adapter caseMdodel(Mdodel object)
      {
        return createMdodelAdapter();
      }
      @Override
      public Adapter caseFormalDefault(FormalDefault object)
      {
        return createFormalDefaultAdapter();
      }
      @Override
      public Adapter caseStringDefault(StringDefault object)
      {
        return createStringDefaultAdapter();
      }
      @Override
      public Adapter caseNumberDefault(NumberDefault object)
      {
        return createNumberDefaultAdapter();
      }
      @Override
      public Adapter caseBoolDefault(BoolDefault object)
      {
        return createBoolDefaultAdapter();
      }
      @Override
      public Adapter caseCollection(Collection object)
      {
        return createCollectionAdapter();
      }
      @Override
      public Adapter caseApplication(Application object)
      {
        return createApplicationAdapter();
      }
      @Override
      public Adapter caseDeploymentConstraint(DeploymentConstraint object)
      {
        return createDeploymentConstraintAdapter();
      }
      @Override
      public Adapter caseCollocateConstraint(CollocateConstraint object)
      {
        return createCollocateConstraintAdapter();
      }
      @Override
      public Adapter caseDistributeConstraint(DistributeConstraint object)
      {
        return createDistributeConstraintAdapter();
      }
      @Override
      public Adapter caseImport(Import object)
      {
        return createImportAdapter();
      }
      @Override
      public Adapter caseMessage(Message object)
      {
        return createMessageAdapter();
      }
      @Override
      public Adapter caseArtifact(Artifact object)
      {
        return createArtifactAdapter();
      }
      @Override
      public Adapter caseComponent(Component object)
      {
        return createComponentAdapter();
      }
      @Override
      public Adapter caseDeviceComponent(DeviceComponent object)
      {
        return createDeviceComponentAdapter();
      }
      @Override
      public Adapter caseAppComponent(AppComponent object)
      {
        return createAppComponentAdapter();
      }
      @Override
      public Adapter caseMemoryUnits(MemoryUnits object)
      {
        return createMemoryUnitsAdapter();
      }
      @Override
      public Adapter caseRequirement(Requirement object)
      {
        return createRequirementAdapter();
      }
      @Override
      public Adapter casePort(Port object)
      {
        return createPortAdapter();
      }
      @Override
      public Adapter caseRateLimit(RateLimit object)
      {
        return createRateLimitAdapter();
      }
      @Override
      public Adapter casePubPort(PubPort object)
      {
        return createPubPortAdapter();
      }
      @Override
      public Adapter caseSubPort(SubPort object)
      {
        return createSubPortAdapter();
      }
      @Override
      public Adapter caseDeadline(Deadline object)
      {
        return createDeadlineAdapter();
      }
      @Override
      public Adapter caseClntPort(ClntPort object)
      {
        return createClntPortAdapter();
      }
      @Override
      public Adapter caseSrvPort(SrvPort object)
      {
        return createSrvPortAdapter();
      }
      @Override
      public Adapter caseReqPort(ReqPort object)
      {
        return createReqPortAdapter();
      }
      @Override
      public Adapter caseTimeUnit(TimeUnit object)
      {
        return createTimeUnitAdapter();
      }
      @Override
      public Adapter caseTimPort(TimPort object)
      {
        return createTimPortAdapter();
      }
      @Override
      public Adapter caseInsPort(InsPort object)
      {
        return createInsPortAdapter();
      }
      @Override
      public Adapter caseComponentFormal(ComponentFormal object)
      {
        return createComponentFormalAdapter();
      }
      @Override
      public Adapter caseActorFormal(ActorFormal object)
      {
        return createActorFormalAdapter();
      }
      @Override
      public Adapter caseActor(Actor object)
      {
        return createActorAdapter();
      }
      @Override
      public Adapter caseInstanceSection(InstanceSection object)
      {
        return createInstanceSectionAdapter();
      }
      @Override
      public Adapter caseWire(Wire object)
      {
        return createWireAdapter();
      }
      @Override
      public Adapter caseActual(Actual object)
      {
        return createActualAdapter();
      }
      @Override
      public Adapter caseInstance(Instance object)
      {
        return createInstanceAdapter();
      }
      @Override
      public Adapter caseModel(Model object)
      {
        return createModelAdapter();
      }
      @Override
      public Adapter defaultCase(EObject object)
      {
        return createEObjectAdapter();
      }
    };

  /**
   * Creates an adapter for the <code>target</code>.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param target the object to adapt.
   * @return the adapter for the <code>target</code>.
   * @generated
   */
  @Override
  public Adapter createAdapter(Notifier target)
  {
    return modelSwitch.doSwitch((EObject)target);
  }


  /**
   * Creates a new adapter for an object of class '{@link edu.vanderbilt.riaps.app.Mdodel <em>Mdodel</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see edu.vanderbilt.riaps.app.Mdodel
   * @generated
   */
  public Adapter createMdodelAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link edu.vanderbilt.riaps.app.FormalDefault <em>Formal Default</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see edu.vanderbilt.riaps.app.FormalDefault
   * @generated
   */
  public Adapter createFormalDefaultAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link edu.vanderbilt.riaps.app.StringDefault <em>String Default</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see edu.vanderbilt.riaps.app.StringDefault
   * @generated
   */
  public Adapter createStringDefaultAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link edu.vanderbilt.riaps.app.NumberDefault <em>Number Default</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see edu.vanderbilt.riaps.app.NumberDefault
   * @generated
   */
  public Adapter createNumberDefaultAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link edu.vanderbilt.riaps.app.BoolDefault <em>Bool Default</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see edu.vanderbilt.riaps.app.BoolDefault
   * @generated
   */
  public Adapter createBoolDefaultAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link edu.vanderbilt.riaps.app.Collection <em>Collection</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see edu.vanderbilt.riaps.app.Collection
   * @generated
   */
  public Adapter createCollectionAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link edu.vanderbilt.riaps.app.Application <em>Application</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see edu.vanderbilt.riaps.app.Application
   * @generated
   */
  public Adapter createApplicationAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link edu.vanderbilt.riaps.app.DeploymentConstraint <em>Deployment Constraint</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see edu.vanderbilt.riaps.app.DeploymentConstraint
   * @generated
   */
  public Adapter createDeploymentConstraintAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link edu.vanderbilt.riaps.app.CollocateConstraint <em>Collocate Constraint</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see edu.vanderbilt.riaps.app.CollocateConstraint
   * @generated
   */
  public Adapter createCollocateConstraintAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link edu.vanderbilt.riaps.app.DistributeConstraint <em>Distribute Constraint</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see edu.vanderbilt.riaps.app.DistributeConstraint
   * @generated
   */
  public Adapter createDistributeConstraintAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link edu.vanderbilt.riaps.app.Import <em>Import</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see edu.vanderbilt.riaps.app.Import
   * @generated
   */
  public Adapter createImportAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link edu.vanderbilt.riaps.app.Message <em>Message</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see edu.vanderbilt.riaps.app.Message
   * @generated
   */
  public Adapter createMessageAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link edu.vanderbilt.riaps.app.Artifact <em>Artifact</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see edu.vanderbilt.riaps.app.Artifact
   * @generated
   */
  public Adapter createArtifactAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link edu.vanderbilt.riaps.app.Component <em>Component</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see edu.vanderbilt.riaps.app.Component
   * @generated
   */
  public Adapter createComponentAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link edu.vanderbilt.riaps.app.DeviceComponent <em>Device Component</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see edu.vanderbilt.riaps.app.DeviceComponent
   * @generated
   */
  public Adapter createDeviceComponentAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link edu.vanderbilt.riaps.app.AppComponent <em>Component</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see edu.vanderbilt.riaps.app.AppComponent
   * @generated
   */
  public Adapter createAppComponentAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link edu.vanderbilt.riaps.app.MemoryUnits <em>Memory Units</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see edu.vanderbilt.riaps.app.MemoryUnits
   * @generated
   */
  public Adapter createMemoryUnitsAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link edu.vanderbilt.riaps.app.Requirement <em>Requirement</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see edu.vanderbilt.riaps.app.Requirement
   * @generated
   */
  public Adapter createRequirementAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link edu.vanderbilt.riaps.app.Port <em>Port</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see edu.vanderbilt.riaps.app.Port
   * @generated
   */
  public Adapter createPortAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link edu.vanderbilt.riaps.app.RateLimit <em>Rate Limit</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see edu.vanderbilt.riaps.app.RateLimit
   * @generated
   */
  public Adapter createRateLimitAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link edu.vanderbilt.riaps.app.PubPort <em>Pub Port</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see edu.vanderbilt.riaps.app.PubPort
   * @generated
   */
  public Adapter createPubPortAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link edu.vanderbilt.riaps.app.SubPort <em>Sub Port</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see edu.vanderbilt.riaps.app.SubPort
   * @generated
   */
  public Adapter createSubPortAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link edu.vanderbilt.riaps.app.Deadline <em>Deadline</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see edu.vanderbilt.riaps.app.Deadline
   * @generated
   */
  public Adapter createDeadlineAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link edu.vanderbilt.riaps.app.ClntPort <em>Clnt Port</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see edu.vanderbilt.riaps.app.ClntPort
   * @generated
   */
  public Adapter createClntPortAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link edu.vanderbilt.riaps.app.SrvPort <em>Srv Port</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see edu.vanderbilt.riaps.app.SrvPort
   * @generated
   */
  public Adapter createSrvPortAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link edu.vanderbilt.riaps.app.ReqPort <em>Req Port</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see edu.vanderbilt.riaps.app.ReqPort
   * @generated
   */
  public Adapter createReqPortAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link edu.vanderbilt.riaps.app.TimeUnit <em>Time Unit</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see edu.vanderbilt.riaps.app.TimeUnit
   * @generated
   */
  public Adapter createTimeUnitAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link edu.vanderbilt.riaps.app.TimPort <em>Tim Port</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see edu.vanderbilt.riaps.app.TimPort
   * @generated
   */
  public Adapter createTimPortAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link edu.vanderbilt.riaps.app.InsPort <em>Ins Port</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see edu.vanderbilt.riaps.app.InsPort
   * @generated
   */
  public Adapter createInsPortAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link edu.vanderbilt.riaps.app.ComponentFormal <em>Component Formal</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see edu.vanderbilt.riaps.app.ComponentFormal
   * @generated
   */
  public Adapter createComponentFormalAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link edu.vanderbilt.riaps.app.ActorFormal <em>Actor Formal</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see edu.vanderbilt.riaps.app.ActorFormal
   * @generated
   */
  public Adapter createActorFormalAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link edu.vanderbilt.riaps.app.Actor <em>Actor</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see edu.vanderbilt.riaps.app.Actor
   * @generated
   */
  public Adapter createActorAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link edu.vanderbilt.riaps.app.InstanceSection <em>Instance Section</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see edu.vanderbilt.riaps.app.InstanceSection
   * @generated
   */
  public Adapter createInstanceSectionAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link edu.vanderbilt.riaps.app.Wire <em>Wire</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see edu.vanderbilt.riaps.app.Wire
   * @generated
   */
  public Adapter createWireAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link edu.vanderbilt.riaps.app.Actual <em>Actual</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see edu.vanderbilt.riaps.app.Actual
   * @generated
   */
  public Adapter createActualAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link edu.vanderbilt.riaps.app.Instance <em>Instance</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see edu.vanderbilt.riaps.app.Instance
   * @generated
   */
  public Adapter createInstanceAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link edu.vanderbilt.riaps.app.Model <em>Model</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see edu.vanderbilt.riaps.app.Model
   * @generated
   */
  public Adapter createModelAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for the default case.
   * <!-- begin-user-doc -->
   * This default implementation returns null.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @generated
   */
  public Adapter createEObjectAdapter()
  {
    return null;
  }

} //AppAdapterFactory
