/**
 * generated by Xtext 2.10.0
 */
package edu.vanderbilt.riaps.app.impl;

import edu.vanderbilt.riaps.app.Actor;
import edu.vanderbilt.riaps.app.ActorFormal;
import edu.vanderbilt.riaps.app.AppPackage;
import edu.vanderbilt.riaps.app.InstanceSection;
import edu.vanderbilt.riaps.app.Message;
import edu.vanderbilt.riaps.app.Wire;

import java.util.Collection;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.common.util.EList;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import org.eclipse.emf.ecore.util.EObjectContainmentEList;
import org.eclipse.emf.ecore.util.EObjectResolvingEList;
import org.eclipse.emf.ecore.util.InternalEList;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Actor</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link edu.vanderbilt.riaps.app.impl.ActorImpl#getName <em>Name</em>}</li>
 *   <li>{@link edu.vanderbilt.riaps.app.impl.ActorImpl#getFormals <em>Formals</em>}</li>
 *   <li>{@link edu.vanderbilt.riaps.app.impl.ActorImpl#getLocals <em>Locals</em>}</li>
 *   <li>{@link edu.vanderbilt.riaps.app.impl.ActorImpl#getInternals <em>Internals</em>}</li>
 *   <li>{@link edu.vanderbilt.riaps.app.impl.ActorImpl#getCriticals <em>Criticals</em>}</li>
 *   <li>{@link edu.vanderbilt.riaps.app.impl.ActorImpl#getCompsection <em>Compsection</em>}</li>
 *   <li>{@link edu.vanderbilt.riaps.app.impl.ActorImpl#getWires <em>Wires</em>}</li>
 * </ul>
 *
 * @generated
 */
public class ActorImpl extends MinimalEObjectImpl.Container implements Actor
{
  /**
   * The default value of the '{@link #getName() <em>Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getName()
   * @generated
   * @ordered
   */
  protected static final String NAME_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getName() <em>Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getName()
   * @generated
   * @ordered
   */
  protected String name = NAME_EDEFAULT;

  /**
   * The cached value of the '{@link #getFormals() <em>Formals</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getFormals()
   * @generated
   * @ordered
   */
  protected EList<ActorFormal> formals;

  /**
   * The cached value of the '{@link #getLocals() <em>Locals</em>}' reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getLocals()
   * @generated
   * @ordered
   */
  protected EList<Message> locals;

  /**
   * The cached value of the '{@link #getInternals() <em>Internals</em>}' reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getInternals()
   * @generated
   * @ordered
   */
  protected EList<Message> internals;

  /**
   * The cached value of the '{@link #getCriticals() <em>Criticals</em>}' reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getCriticals()
   * @generated
   * @ordered
   */
  protected EList<Message> criticals;

  /**
   * The cached value of the '{@link #getCompsection() <em>Compsection</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getCompsection()
   * @generated
   * @ordered
   */
  protected InstanceSection compsection;

  /**
   * The cached value of the '{@link #getWires() <em>Wires</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getWires()
   * @generated
   * @ordered
   */
  protected EList<Wire> wires;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected ActorImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return AppPackage.Literals.ACTOR;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getName()
  {
    return name;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setName(String newName)
  {
    String oldName = name;
    name = newName;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, AppPackage.ACTOR__NAME, oldName, name));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EList<ActorFormal> getFormals()
  {
    if (formals == null)
    {
      formals = new EObjectContainmentEList<ActorFormal>(ActorFormal.class, this, AppPackage.ACTOR__FORMALS);
    }
    return formals;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EList<Message> getLocals()
  {
    if (locals == null)
    {
      locals = new EObjectResolvingEList<Message>(Message.class, this, AppPackage.ACTOR__LOCALS);
    }
    return locals;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EList<Message> getInternals()
  {
    if (internals == null)
    {
      internals = new EObjectResolvingEList<Message>(Message.class, this, AppPackage.ACTOR__INTERNALS);
    }
    return internals;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EList<Message> getCriticals()
  {
    if (criticals == null)
    {
      criticals = new EObjectResolvingEList<Message>(Message.class, this, AppPackage.ACTOR__CRITICALS);
    }
    return criticals;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public InstanceSection getCompsection()
  {
    return compsection;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetCompsection(InstanceSection newCompsection, NotificationChain msgs)
  {
    InstanceSection oldCompsection = compsection;
    compsection = newCompsection;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, AppPackage.ACTOR__COMPSECTION, oldCompsection, newCompsection);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setCompsection(InstanceSection newCompsection)
  {
    if (newCompsection != compsection)
    {
      NotificationChain msgs = null;
      if (compsection != null)
        msgs = ((InternalEObject)compsection).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - AppPackage.ACTOR__COMPSECTION, null, msgs);
      if (newCompsection != null)
        msgs = ((InternalEObject)newCompsection).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - AppPackage.ACTOR__COMPSECTION, null, msgs);
      msgs = basicSetCompsection(newCompsection, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, AppPackage.ACTOR__COMPSECTION, newCompsection, newCompsection));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EList<Wire> getWires()
  {
    if (wires == null)
    {
      wires = new EObjectContainmentEList<Wire>(Wire.class, this, AppPackage.ACTOR__WIRES);
    }
    return wires;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case AppPackage.ACTOR__FORMALS:
        return ((InternalEList<?>)getFormals()).basicRemove(otherEnd, msgs);
      case AppPackage.ACTOR__COMPSECTION:
        return basicSetCompsection(null, msgs);
      case AppPackage.ACTOR__WIRES:
        return ((InternalEList<?>)getWires()).basicRemove(otherEnd, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case AppPackage.ACTOR__NAME:
        return getName();
      case AppPackage.ACTOR__FORMALS:
        return getFormals();
      case AppPackage.ACTOR__LOCALS:
        return getLocals();
      case AppPackage.ACTOR__INTERNALS:
        return getInternals();
      case AppPackage.ACTOR__CRITICALS:
        return getCriticals();
      case AppPackage.ACTOR__COMPSECTION:
        return getCompsection();
      case AppPackage.ACTOR__WIRES:
        return getWires();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @SuppressWarnings("unchecked")
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case AppPackage.ACTOR__NAME:
        setName((String)newValue);
        return;
      case AppPackage.ACTOR__FORMALS:
        getFormals().clear();
        getFormals().addAll((Collection<? extends ActorFormal>)newValue);
        return;
      case AppPackage.ACTOR__LOCALS:
        getLocals().clear();
        getLocals().addAll((Collection<? extends Message>)newValue);
        return;
      case AppPackage.ACTOR__INTERNALS:
        getInternals().clear();
        getInternals().addAll((Collection<? extends Message>)newValue);
        return;
      case AppPackage.ACTOR__CRITICALS:
        getCriticals().clear();
        getCriticals().addAll((Collection<? extends Message>)newValue);
        return;
      case AppPackage.ACTOR__COMPSECTION:
        setCompsection((InstanceSection)newValue);
        return;
      case AppPackage.ACTOR__WIRES:
        getWires().clear();
        getWires().addAll((Collection<? extends Wire>)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case AppPackage.ACTOR__NAME:
        setName(NAME_EDEFAULT);
        return;
      case AppPackage.ACTOR__FORMALS:
        getFormals().clear();
        return;
      case AppPackage.ACTOR__LOCALS:
        getLocals().clear();
        return;
      case AppPackage.ACTOR__INTERNALS:
        getInternals().clear();
        return;
      case AppPackage.ACTOR__CRITICALS:
        getCriticals().clear();
        return;
      case AppPackage.ACTOR__COMPSECTION:
        setCompsection((InstanceSection)null);
        return;
      case AppPackage.ACTOR__WIRES:
        getWires().clear();
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case AppPackage.ACTOR__NAME:
        return NAME_EDEFAULT == null ? name != null : !NAME_EDEFAULT.equals(name);
      case AppPackage.ACTOR__FORMALS:
        return formals != null && !formals.isEmpty();
      case AppPackage.ACTOR__LOCALS:
        return locals != null && !locals.isEmpty();
      case AppPackage.ACTOR__INTERNALS:
        return internals != null && !internals.isEmpty();
      case AppPackage.ACTOR__CRITICALS:
        return criticals != null && !criticals.isEmpty();
      case AppPackage.ACTOR__COMPSECTION:
        return compsection != null;
      case AppPackage.ACTOR__WIRES:
        return wires != null && !wires.isEmpty();
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuffer result = new StringBuffer(super.toString());
    result.append(" (name: ");
    result.append(name);
    result.append(')');
    return result.toString();
  }

} //ActorImpl
