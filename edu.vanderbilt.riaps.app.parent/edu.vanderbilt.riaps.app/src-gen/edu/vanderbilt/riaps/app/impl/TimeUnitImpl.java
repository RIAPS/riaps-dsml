/**
 * generated by Xtext 2.10.0
 */
package edu.vanderbilt.riaps.app.impl;

import edu.vanderbilt.riaps.app.AppPackage;
import edu.vanderbilt.riaps.app.TimeUnit;

import org.eclipse.emf.common.notify.Notification;

import org.eclipse.emf.ecore.EClass;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Time Unit</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link edu.vanderbilt.riaps.app.impl.TimeUnitImpl#isMonths <em>Months</em>}</li>
 *   <li>{@link edu.vanderbilt.riaps.app.impl.TimeUnitImpl#isDays <em>Days</em>}</li>
 *   <li>{@link edu.vanderbilt.riaps.app.impl.TimeUnitImpl#isSeconds <em>Seconds</em>}</li>
 *   <li>{@link edu.vanderbilt.riaps.app.impl.TimeUnitImpl#isMilliseconds <em>Milliseconds</em>}</li>
 *   <li>{@link edu.vanderbilt.riaps.app.impl.TimeUnitImpl#isNanoseconds <em>Nanoseconds</em>}</li>
 *   <li>{@link edu.vanderbilt.riaps.app.impl.TimeUnitImpl#isMicroseconds <em>Microseconds</em>}</li>
 * </ul>
 *
 * @generated
 */
public class TimeUnitImpl extends MinimalEObjectImpl.Container implements TimeUnit
{
  /**
   * The default value of the '{@link #isMonths() <em>Months</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #isMonths()
   * @generated
   * @ordered
   */
  protected static final boolean MONTHS_EDEFAULT = false;

  /**
   * The cached value of the '{@link #isMonths() <em>Months</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #isMonths()
   * @generated
   * @ordered
   */
  protected boolean months = MONTHS_EDEFAULT;

  /**
   * The default value of the '{@link #isDays() <em>Days</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #isDays()
   * @generated
   * @ordered
   */
  protected static final boolean DAYS_EDEFAULT = false;

  /**
   * The cached value of the '{@link #isDays() <em>Days</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #isDays()
   * @generated
   * @ordered
   */
  protected boolean days = DAYS_EDEFAULT;

  /**
   * The default value of the '{@link #isSeconds() <em>Seconds</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #isSeconds()
   * @generated
   * @ordered
   */
  protected static final boolean SECONDS_EDEFAULT = false;

  /**
   * The cached value of the '{@link #isSeconds() <em>Seconds</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #isSeconds()
   * @generated
   * @ordered
   */
  protected boolean seconds = SECONDS_EDEFAULT;

  /**
   * The default value of the '{@link #isMilliseconds() <em>Milliseconds</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #isMilliseconds()
   * @generated
   * @ordered
   */
  protected static final boolean MILLISECONDS_EDEFAULT = false;

  /**
   * The cached value of the '{@link #isMilliseconds() <em>Milliseconds</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #isMilliseconds()
   * @generated
   * @ordered
   */
  protected boolean milliseconds = MILLISECONDS_EDEFAULT;

  /**
   * The default value of the '{@link #isNanoseconds() <em>Nanoseconds</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #isNanoseconds()
   * @generated
   * @ordered
   */
  protected static final boolean NANOSECONDS_EDEFAULT = false;

  /**
   * The cached value of the '{@link #isNanoseconds() <em>Nanoseconds</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #isNanoseconds()
   * @generated
   * @ordered
   */
  protected boolean nanoseconds = NANOSECONDS_EDEFAULT;

  /**
   * The default value of the '{@link #isMicroseconds() <em>Microseconds</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #isMicroseconds()
   * @generated
   * @ordered
   */
  protected static final boolean MICROSECONDS_EDEFAULT = false;

  /**
   * The cached value of the '{@link #isMicroseconds() <em>Microseconds</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #isMicroseconds()
   * @generated
   * @ordered
   */
  protected boolean microseconds = MICROSECONDS_EDEFAULT;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected TimeUnitImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return AppPackage.Literals.TIME_UNIT;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean isMonths()
  {
    return months;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setMonths(boolean newMonths)
  {
    boolean oldMonths = months;
    months = newMonths;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, AppPackage.TIME_UNIT__MONTHS, oldMonths, months));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean isDays()
  {
    return days;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setDays(boolean newDays)
  {
    boolean oldDays = days;
    days = newDays;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, AppPackage.TIME_UNIT__DAYS, oldDays, days));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean isSeconds()
  {
    return seconds;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setSeconds(boolean newSeconds)
  {
    boolean oldSeconds = seconds;
    seconds = newSeconds;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, AppPackage.TIME_UNIT__SECONDS, oldSeconds, seconds));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean isMilliseconds()
  {
    return milliseconds;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setMilliseconds(boolean newMilliseconds)
  {
    boolean oldMilliseconds = milliseconds;
    milliseconds = newMilliseconds;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, AppPackage.TIME_UNIT__MILLISECONDS, oldMilliseconds, milliseconds));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean isNanoseconds()
  {
    return nanoseconds;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setNanoseconds(boolean newNanoseconds)
  {
    boolean oldNanoseconds = nanoseconds;
    nanoseconds = newNanoseconds;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, AppPackage.TIME_UNIT__NANOSECONDS, oldNanoseconds, nanoseconds));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean isMicroseconds()
  {
    return microseconds;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setMicroseconds(boolean newMicroseconds)
  {
    boolean oldMicroseconds = microseconds;
    microseconds = newMicroseconds;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, AppPackage.TIME_UNIT__MICROSECONDS, oldMicroseconds, microseconds));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case AppPackage.TIME_UNIT__MONTHS:
        return isMonths();
      case AppPackage.TIME_UNIT__DAYS:
        return isDays();
      case AppPackage.TIME_UNIT__SECONDS:
        return isSeconds();
      case AppPackage.TIME_UNIT__MILLISECONDS:
        return isMilliseconds();
      case AppPackage.TIME_UNIT__NANOSECONDS:
        return isNanoseconds();
      case AppPackage.TIME_UNIT__MICROSECONDS:
        return isMicroseconds();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case AppPackage.TIME_UNIT__MONTHS:
        setMonths((Boolean)newValue);
        return;
      case AppPackage.TIME_UNIT__DAYS:
        setDays((Boolean)newValue);
        return;
      case AppPackage.TIME_UNIT__SECONDS:
        setSeconds((Boolean)newValue);
        return;
      case AppPackage.TIME_UNIT__MILLISECONDS:
        setMilliseconds((Boolean)newValue);
        return;
      case AppPackage.TIME_UNIT__NANOSECONDS:
        setNanoseconds((Boolean)newValue);
        return;
      case AppPackage.TIME_UNIT__MICROSECONDS:
        setMicroseconds((Boolean)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case AppPackage.TIME_UNIT__MONTHS:
        setMonths(MONTHS_EDEFAULT);
        return;
      case AppPackage.TIME_UNIT__DAYS:
        setDays(DAYS_EDEFAULT);
        return;
      case AppPackage.TIME_UNIT__SECONDS:
        setSeconds(SECONDS_EDEFAULT);
        return;
      case AppPackage.TIME_UNIT__MILLISECONDS:
        setMilliseconds(MILLISECONDS_EDEFAULT);
        return;
      case AppPackage.TIME_UNIT__NANOSECONDS:
        setNanoseconds(NANOSECONDS_EDEFAULT);
        return;
      case AppPackage.TIME_UNIT__MICROSECONDS:
        setMicroseconds(MICROSECONDS_EDEFAULT);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case AppPackage.TIME_UNIT__MONTHS:
        return months != MONTHS_EDEFAULT;
      case AppPackage.TIME_UNIT__DAYS:
        return days != DAYS_EDEFAULT;
      case AppPackage.TIME_UNIT__SECONDS:
        return seconds != SECONDS_EDEFAULT;
      case AppPackage.TIME_UNIT__MILLISECONDS:
        return milliseconds != MILLISECONDS_EDEFAULT;
      case AppPackage.TIME_UNIT__NANOSECONDS:
        return nanoseconds != NANOSECONDS_EDEFAULT;
      case AppPackage.TIME_UNIT__MICROSECONDS:
        return microseconds != MICROSECONDS_EDEFAULT;
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuffer result = new StringBuffer(super.toString());
    result.append(" (months: ");
    result.append(months);
    result.append(", days: ");
    result.append(days);
    result.append(", seconds: ");
    result.append(seconds);
    result.append(", milliseconds: ");
    result.append(milliseconds);
    result.append(", nanoseconds: ");
    result.append(nanoseconds);
    result.append(", microseconds: ");
    result.append(microseconds);
    result.append(')');
    return result.toString();
  }

} //TimeUnitImpl
