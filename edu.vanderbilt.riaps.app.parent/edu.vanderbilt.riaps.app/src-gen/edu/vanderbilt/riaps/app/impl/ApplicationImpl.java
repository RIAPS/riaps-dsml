/**
 * generated by Xtext 2.10.0
 */
package edu.vanderbilt.riaps.app.impl;

import edu.vanderbilt.riaps.app.Actor;
import edu.vanderbilt.riaps.app.AppPackage;
import edu.vanderbilt.riaps.app.Application;
import edu.vanderbilt.riaps.app.Artifact;
import edu.vanderbilt.riaps.app.Component;
import edu.vanderbilt.riaps.app.Message;

import java.util.Collection;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.common.util.EList;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;

import org.eclipse.emf.ecore.util.EObjectContainmentEList;
import org.eclipse.emf.ecore.util.InternalEList;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Application</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link edu.vanderbilt.riaps.app.impl.ApplicationImpl#getBaseapp <em>Baseapp</em>}</li>
 *   <li>{@link edu.vanderbilt.riaps.app.impl.ApplicationImpl#getArtifacts <em>Artifacts</em>}</li>
 *   <li>{@link edu.vanderbilt.riaps.app.impl.ApplicationImpl#getActors <em>Actors</em>}</li>
 *   <li>{@link edu.vanderbilt.riaps.app.impl.ApplicationImpl#getComponents <em>Components</em>}</li>
 *   <li>{@link edu.vanderbilt.riaps.app.impl.ApplicationImpl#getMessages <em>Messages</em>}</li>
 * </ul>
 *
 * @generated
 */
public class ApplicationImpl extends CollectionImpl implements Application
{
  /**
   * The cached value of the '{@link #getBaseapp() <em>Baseapp</em>}' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getBaseapp()
   * @generated
   * @ordered
   */
  protected Application baseapp;

  /**
   * The cached value of the '{@link #getArtifacts() <em>Artifacts</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getArtifacts()
   * @generated
   * @ordered
   */
  protected EList<Artifact> artifacts;

  /**
   * The cached value of the '{@link #getActors() <em>Actors</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getActors()
   * @generated
   * @ordered
   */
  protected EList<Actor> actors;

  /**
   * The cached value of the '{@link #getComponents() <em>Components</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getComponents()
   * @generated
   * @ordered
   */
  protected EList<Component> components;

  /**
   * The cached value of the '{@link #getMessages() <em>Messages</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getMessages()
   * @generated
   * @ordered
   */
  protected EList<Message> messages;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected ApplicationImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return AppPackage.Literals.APPLICATION;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Application getBaseapp()
  {
    if (baseapp != null && baseapp.eIsProxy())
    {
      InternalEObject oldBaseapp = (InternalEObject)baseapp;
      baseapp = (Application)eResolveProxy(oldBaseapp);
      if (baseapp != oldBaseapp)
      {
        if (eNotificationRequired())
          eNotify(new ENotificationImpl(this, Notification.RESOLVE, AppPackage.APPLICATION__BASEAPP, oldBaseapp, baseapp));
      }
    }
    return baseapp;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Application basicGetBaseapp()
  {
    return baseapp;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setBaseapp(Application newBaseapp)
  {
    Application oldBaseapp = baseapp;
    baseapp = newBaseapp;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, AppPackage.APPLICATION__BASEAPP, oldBaseapp, baseapp));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EList<Artifact> getArtifacts()
  {
    if (artifacts == null)
    {
      artifacts = new EObjectContainmentEList<Artifact>(Artifact.class, this, AppPackage.APPLICATION__ARTIFACTS);
    }
    return artifacts;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EList<Actor> getActors()
  {
    if (actors == null)
    {
      actors = new EObjectContainmentEList<Actor>(Actor.class, this, AppPackage.APPLICATION__ACTORS);
    }
    return actors;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EList<Component> getComponents()
  {
    if (components == null)
    {
      components = new EObjectContainmentEList<Component>(Component.class, this, AppPackage.APPLICATION__COMPONENTS);
    }
    return components;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EList<Message> getMessages()
  {
    if (messages == null)
    {
      messages = new EObjectContainmentEList<Message>(Message.class, this, AppPackage.APPLICATION__MESSAGES);
    }
    return messages;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case AppPackage.APPLICATION__ARTIFACTS:
        return ((InternalEList<?>)getArtifacts()).basicRemove(otherEnd, msgs);
      case AppPackage.APPLICATION__ACTORS:
        return ((InternalEList<?>)getActors()).basicRemove(otherEnd, msgs);
      case AppPackage.APPLICATION__COMPONENTS:
        return ((InternalEList<?>)getComponents()).basicRemove(otherEnd, msgs);
      case AppPackage.APPLICATION__MESSAGES:
        return ((InternalEList<?>)getMessages()).basicRemove(otherEnd, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case AppPackage.APPLICATION__BASEAPP:
        if (resolve) return getBaseapp();
        return basicGetBaseapp();
      case AppPackage.APPLICATION__ARTIFACTS:
        return getArtifacts();
      case AppPackage.APPLICATION__ACTORS:
        return getActors();
      case AppPackage.APPLICATION__COMPONENTS:
        return getComponents();
      case AppPackage.APPLICATION__MESSAGES:
        return getMessages();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @SuppressWarnings("unchecked")
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case AppPackage.APPLICATION__BASEAPP:
        setBaseapp((Application)newValue);
        return;
      case AppPackage.APPLICATION__ARTIFACTS:
        getArtifacts().clear();
        getArtifacts().addAll((Collection<? extends Artifact>)newValue);
        return;
      case AppPackage.APPLICATION__ACTORS:
        getActors().clear();
        getActors().addAll((Collection<? extends Actor>)newValue);
        return;
      case AppPackage.APPLICATION__COMPONENTS:
        getComponents().clear();
        getComponents().addAll((Collection<? extends Component>)newValue);
        return;
      case AppPackage.APPLICATION__MESSAGES:
        getMessages().clear();
        getMessages().addAll((Collection<? extends Message>)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case AppPackage.APPLICATION__BASEAPP:
        setBaseapp((Application)null);
        return;
      case AppPackage.APPLICATION__ARTIFACTS:
        getArtifacts().clear();
        return;
      case AppPackage.APPLICATION__ACTORS:
        getActors().clear();
        return;
      case AppPackage.APPLICATION__COMPONENTS:
        getComponents().clear();
        return;
      case AppPackage.APPLICATION__MESSAGES:
        getMessages().clear();
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case AppPackage.APPLICATION__BASEAPP:
        return baseapp != null;
      case AppPackage.APPLICATION__ARTIFACTS:
        return artifacts != null && !artifacts.isEmpty();
      case AppPackage.APPLICATION__ACTORS:
        return actors != null && !actors.isEmpty();
      case AppPackage.APPLICATION__COMPONENTS:
        return components != null && !components.isEmpty();
      case AppPackage.APPLICATION__MESSAGES:
        return messages != null && !messages.isEmpty();
    }
    return super.eIsSet(featureID);
  }

} //ApplicationImpl
