/**
 * generated by Xtext 2.10.0
 */
package edu.vanderbilt.riaps.datatypes.impl;

import edu.vanderbilt.riaps.datatypes.DatatypesFactory;
import edu.vanderbilt.riaps.datatypes.DatatypesPackage;
import edu.vanderbilt.riaps.datatypes.FBasicTypeId;
import edu.vanderbilt.riaps.datatypes.FEnumerationType;
import edu.vanderbilt.riaps.datatypes.FEnumerator;
import edu.vanderbilt.riaps.datatypes.FField;
import edu.vanderbilt.riaps.datatypes.FMapType;
import edu.vanderbilt.riaps.datatypes.FMessage;
import edu.vanderbilt.riaps.datatypes.FStructType;
import edu.vanderbilt.riaps.datatypes.FType;
import edu.vanderbilt.riaps.datatypes.FTypeCollection;
import edu.vanderbilt.riaps.datatypes.FTypeRef;
import edu.vanderbilt.riaps.datatypes.FVersion;
import edu.vanderbilt.riaps.datatypes.Import;
import edu.vanderbilt.riaps.datatypes.Mdodel;
import edu.vanderbilt.riaps.datatypes.Model;

import org.eclipse.emf.ecore.EAttribute;
import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.EEnum;
import org.eclipse.emf.ecore.EPackage;
import org.eclipse.emf.ecore.EReference;

import org.eclipse.emf.ecore.impl.EPackageImpl;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model <b>Package</b>.
 * <!-- end-user-doc -->
 * @generated
 */
public class DatatypesPackageImpl extends EPackageImpl implements DatatypesPackage
{
  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass mdodelEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass importEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass fTypeCollectionEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass fMessageEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass fVersionEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass fTypeRefEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass fTypeEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass fStructTypeEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass fEnumerationTypeEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass fEnumeratorEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass fMapTypeEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass fFieldEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass modelEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EEnum fBasicTypeIdEEnum = null;

  /**
   * Creates an instance of the model <b>Package</b>, registered with
   * {@link org.eclipse.emf.ecore.EPackage.Registry EPackage.Registry} by the package
   * package URI value.
   * <p>Note: the correct way to create the package is via the static
   * factory method {@link #init init()}, which also performs
   * initialization of the package, or returns the registered package,
   * if one already exists.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.eclipse.emf.ecore.EPackage.Registry
   * @see edu.vanderbilt.riaps.datatypes.DatatypesPackage#eNS_URI
   * @see #init()
   * @generated
   */
  private DatatypesPackageImpl()
  {
    super(eNS_URI, DatatypesFactory.eINSTANCE);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private static boolean isInited = false;

  /**
   * Creates, registers, and initializes the <b>Package</b> for this model, and for any others upon which it depends.
   * 
   * <p>This method is used to initialize {@link DatatypesPackage#eINSTANCE} when that field is accessed.
   * Clients should not invoke it directly. Instead, they should simply access that field to obtain the package.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #eNS_URI
   * @see #createPackageContents()
   * @see #initializePackageContents()
   * @generated
   */
  public static DatatypesPackage init()
  {
    if (isInited) return (DatatypesPackage)EPackage.Registry.INSTANCE.getEPackage(DatatypesPackage.eNS_URI);

    // Obtain or create and register package
    DatatypesPackageImpl theDatatypesPackage = (DatatypesPackageImpl)(EPackage.Registry.INSTANCE.get(eNS_URI) instanceof DatatypesPackageImpl ? EPackage.Registry.INSTANCE.get(eNS_URI) : new DatatypesPackageImpl());

    isInited = true;

    // Create package meta-data objects
    theDatatypesPackage.createPackageContents();

    // Initialize created meta-data
    theDatatypesPackage.initializePackageContents();

    // Mark meta-data to indicate it can't be changed
    theDatatypesPackage.freeze();

  
    // Update the registry and return the package
    EPackage.Registry.INSTANCE.put(DatatypesPackage.eNS_URI, theDatatypesPackage);
    return theDatatypesPackage;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getMdodel()
  {
    return mdodelEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getImport()
  {
    return importEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getImport_ImportedNamespace()
  {
    return (EAttribute)importEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getFTypeCollection()
  {
    return fTypeCollectionEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getFTypeCollection_Name()
  {
    return (EAttribute)fTypeCollectionEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getFTypeCollection_Version()
  {
    return (EReference)fTypeCollectionEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getFTypeCollection_Types()
  {
    return (EReference)fTypeCollectionEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getFMessage()
  {
    return fMessageEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getFMessage_Derived()
  {
    return (EReference)fMessageEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getFMessage_Name()
  {
    return (EAttribute)fMessageEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getFMessage_Key()
  {
    return (EReference)fMessageEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getFVersion()
  {
    return fVersionEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getFVersion_Major()
  {
    return (EAttribute)fVersionEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getFVersion_Minor()
  {
    return (EAttribute)fVersionEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getFTypeRef()
  {
    return fTypeRefEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getFTypeRef_Predefined()
  {
    return (EAttribute)fTypeRefEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getFTypeRef_Derived()
  {
    return (EReference)fTypeRefEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getFType()
  {
    return fTypeEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getFType_Name()
  {
    return (EAttribute)fTypeEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getFStructType()
  {
    return fStructTypeEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getFStructType_Base()
  {
    return (EReference)fStructTypeEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getFStructType_Elements()
  {
    return (EReference)fStructTypeEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getFEnumerationType()
  {
    return fEnumerationTypeEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getFEnumerationType_Base()
  {
    return (EReference)fEnumerationTypeEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getFEnumerationType_Enumerators()
  {
    return (EReference)fEnumerationTypeEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getFEnumerator()
  {
    return fEnumeratorEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getFEnumerator_Name()
  {
    return (EAttribute)fEnumeratorEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getFEnumerator_Value()
  {
    return (EAttribute)fEnumeratorEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getFMapType()
  {
    return fMapTypeEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getFMapType_KeyType()
  {
    return (EReference)fMapTypeEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getFMapType_ValueType()
  {
    return (EReference)fMapTypeEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getFField()
  {
    return fFieldEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getFField_Type()
  {
    return (EReference)fFieldEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getFField_List()
  {
    return (EAttribute)fFieldEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getFField_Name()
  {
    return (EAttribute)fFieldEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getModel()
  {
    return modelEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getModel_Name()
  {
    return (EAttribute)modelEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getModel_Imports()
  {
    return (EReference)modelEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getModel_TypeCollections()
  {
    return (EReference)modelEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EEnum getFBasicTypeId()
  {
    return fBasicTypeIdEEnum;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public DatatypesFactory getDatatypesFactory()
  {
    return (DatatypesFactory)getEFactoryInstance();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private boolean isCreated = false;

  /**
   * Creates the meta-model objects for the package.  This method is
   * guarded to have no affect on any invocation but its first.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void createPackageContents()
  {
    if (isCreated) return;
    isCreated = true;

    // Create classes and their features
    mdodelEClass = createEClass(MDODEL);

    importEClass = createEClass(IMPORT);
    createEAttribute(importEClass, IMPORT__IMPORTED_NAMESPACE);

    fTypeCollectionEClass = createEClass(FTYPE_COLLECTION);
    createEAttribute(fTypeCollectionEClass, FTYPE_COLLECTION__NAME);
    createEReference(fTypeCollectionEClass, FTYPE_COLLECTION__VERSION);
    createEReference(fTypeCollectionEClass, FTYPE_COLLECTION__TYPES);

    fMessageEClass = createEClass(FMESSAGE);
    createEReference(fMessageEClass, FMESSAGE__DERIVED);
    createEAttribute(fMessageEClass, FMESSAGE__NAME);
    createEReference(fMessageEClass, FMESSAGE__KEY);

    fVersionEClass = createEClass(FVERSION);
    createEAttribute(fVersionEClass, FVERSION__MAJOR);
    createEAttribute(fVersionEClass, FVERSION__MINOR);

    fTypeRefEClass = createEClass(FTYPE_REF);
    createEAttribute(fTypeRefEClass, FTYPE_REF__PREDEFINED);
    createEReference(fTypeRefEClass, FTYPE_REF__DERIVED);

    fTypeEClass = createEClass(FTYPE);
    createEAttribute(fTypeEClass, FTYPE__NAME);

    fStructTypeEClass = createEClass(FSTRUCT_TYPE);
    createEReference(fStructTypeEClass, FSTRUCT_TYPE__BASE);
    createEReference(fStructTypeEClass, FSTRUCT_TYPE__ELEMENTS);

    fEnumerationTypeEClass = createEClass(FENUMERATION_TYPE);
    createEReference(fEnumerationTypeEClass, FENUMERATION_TYPE__BASE);
    createEReference(fEnumerationTypeEClass, FENUMERATION_TYPE__ENUMERATORS);

    fEnumeratorEClass = createEClass(FENUMERATOR);
    createEAttribute(fEnumeratorEClass, FENUMERATOR__NAME);
    createEAttribute(fEnumeratorEClass, FENUMERATOR__VALUE);

    fMapTypeEClass = createEClass(FMAP_TYPE);
    createEReference(fMapTypeEClass, FMAP_TYPE__KEY_TYPE);
    createEReference(fMapTypeEClass, FMAP_TYPE__VALUE_TYPE);

    fFieldEClass = createEClass(FFIELD);
    createEReference(fFieldEClass, FFIELD__TYPE);
    createEAttribute(fFieldEClass, FFIELD__LIST);
    createEAttribute(fFieldEClass, FFIELD__NAME);

    modelEClass = createEClass(MODEL);
    createEAttribute(modelEClass, MODEL__NAME);
    createEReference(modelEClass, MODEL__IMPORTS);
    createEReference(modelEClass, MODEL__TYPE_COLLECTIONS);

    // Create enums
    fBasicTypeIdEEnum = createEEnum(FBASIC_TYPE_ID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private boolean isInitialized = false;

  /**
   * Complete the initialization of the package and its meta-model.  This
   * method is guarded to have no affect on any invocation but its first.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void initializePackageContents()
  {
    if (isInitialized) return;
    isInitialized = true;

    // Initialize package
    setName(eNAME);
    setNsPrefix(eNS_PREFIX);
    setNsURI(eNS_URI);

    // Create type parameters

    // Set bounds for type parameters

    // Add supertypes to classes
    fStructTypeEClass.getESuperTypes().add(this.getFType());
    fEnumerationTypeEClass.getESuperTypes().add(this.getFType());
    fMapTypeEClass.getESuperTypes().add(this.getFType());
    modelEClass.getESuperTypes().add(this.getMdodel());

    // Initialize classes and features; add operations and parameters
    initEClass(mdodelEClass, Mdodel.class, "Mdodel", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(importEClass, Import.class, "Import", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getImport_ImportedNamespace(), ecorePackage.getEString(), "importedNamespace", null, 0, 1, Import.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(fTypeCollectionEClass, FTypeCollection.class, "FTypeCollection", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getFTypeCollection_Name(), ecorePackage.getEString(), "name", null, 0, 1, FTypeCollection.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getFTypeCollection_Version(), this.getFVersion(), null, "version", null, 0, 1, FTypeCollection.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getFTypeCollection_Types(), this.getFType(), null, "types", null, 0, -1, FTypeCollection.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(fMessageEClass, FMessage.class, "FMessage", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getFMessage_Derived(), this.getFStructType(), null, "derived", null, 0, 1, FMessage.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getFMessage_Name(), ecorePackage.getEString(), "name", null, 0, 1, FMessage.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getFMessage_Key(), this.getFField(), null, "key", null, 0, 1, FMessage.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(fVersionEClass, FVersion.class, "FVersion", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getFVersion_Major(), ecorePackage.getEInt(), "major", null, 0, 1, FVersion.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getFVersion_Minor(), ecorePackage.getEInt(), "minor", null, 0, 1, FVersion.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(fTypeRefEClass, FTypeRef.class, "FTypeRef", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getFTypeRef_Predefined(), this.getFBasicTypeId(), "predefined", null, 0, 1, FTypeRef.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getFTypeRef_Derived(), this.getFType(), null, "derived", null, 0, 1, FTypeRef.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(fTypeEClass, FType.class, "FType", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getFType_Name(), ecorePackage.getEString(), "name", null, 0, 1, FType.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(fStructTypeEClass, FStructType.class, "FStructType", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getFStructType_Base(), this.getFStructType(), null, "base", null, 0, 1, FStructType.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getFStructType_Elements(), this.getFField(), null, "elements", null, 0, -1, FStructType.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(fEnumerationTypeEClass, FEnumerationType.class, "FEnumerationType", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getFEnumerationType_Base(), this.getFEnumerationType(), null, "base", null, 0, 1, FEnumerationType.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getFEnumerationType_Enumerators(), this.getFEnumerator(), null, "enumerators", null, 0, -1, FEnumerationType.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(fEnumeratorEClass, FEnumerator.class, "FEnumerator", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getFEnumerator_Name(), ecorePackage.getEString(), "name", null, 0, 1, FEnumerator.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getFEnumerator_Value(), ecorePackage.getEString(), "value", null, 0, 1, FEnumerator.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(fMapTypeEClass, FMapType.class, "FMapType", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getFMapType_KeyType(), this.getFTypeRef(), null, "keyType", null, 0, 1, FMapType.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getFMapType_ValueType(), this.getFTypeRef(), null, "valueType", null, 0, 1, FMapType.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(fFieldEClass, FField.class, "FField", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getFField_Type(), this.getFTypeRef(), null, "type", null, 0, 1, FField.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getFField_List(), ecorePackage.getEBoolean(), "list", null, 0, 1, FField.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getFField_Name(), ecorePackage.getEString(), "name", null, 0, 1, FField.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(modelEClass, Model.class, "Model", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getModel_Name(), ecorePackage.getEString(), "name", null, 0, 1, Model.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getModel_Imports(), this.getImport(), null, "imports", null, 0, -1, Model.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getModel_TypeCollections(), this.getFTypeCollection(), null, "typeCollections", null, 0, -1, Model.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    // Initialize enums and add enum literals
    initEEnum(fBasicTypeIdEEnum, FBasicTypeId.class, "FBasicTypeId");
    addEEnumLiteral(fBasicTypeIdEEnum, FBasicTypeId.INT8);
    addEEnumLiteral(fBasicTypeIdEEnum, FBasicTypeId.UINT8);
    addEEnumLiteral(fBasicTypeIdEEnum, FBasicTypeId.INT16);
    addEEnumLiteral(fBasicTypeIdEEnum, FBasicTypeId.UINT16);
    addEEnumLiteral(fBasicTypeIdEEnum, FBasicTypeId.INT32);
    addEEnumLiteral(fBasicTypeIdEEnum, FBasicTypeId.UINT32);
    addEEnumLiteral(fBasicTypeIdEEnum, FBasicTypeId.INT64);
    addEEnumLiteral(fBasicTypeIdEEnum, FBasicTypeId.UINT64);
    addEEnumLiteral(fBasicTypeIdEEnum, FBasicTypeId.BOOLEAN);
    addEEnumLiteral(fBasicTypeIdEEnum, FBasicTypeId.STRING);
    addEEnumLiteral(fBasicTypeIdEEnum, FBasicTypeId.FLOAT);
    addEEnumLiteral(fBasicTypeIdEEnum, FBasicTypeId.DOUBLE);
    addEEnumLiteral(fBasicTypeIdEEnum, FBasicTypeId.CHAR);
    addEEnumLiteral(fBasicTypeIdEEnum, FBasicTypeId.BYTE_BUFFER);

    // Create resource
    createResource(eNS_URI);
  }

} //DatatypesPackageImpl
