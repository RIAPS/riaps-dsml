/**
 * generated by Xtext 2.10.0
 */
package edu.vanderbilt.riaps.datatypes;

import java.util.Arrays;
import java.util.Collections;
import java.util.List;

import org.eclipse.emf.common.util.Enumerator;

/**
 * <!-- begin-user-doc -->
 * A representation of the literals of the enumeration '<em><b>FBasic Type Id</b></em>',
 * and utility methods for working with them.
 * <!-- end-user-doc -->
 * @see edu.vanderbilt.riaps.datatypes.DatatypesPackage#getFBasicTypeId()
 * @model
 * @generated
 */
public enum FBasicTypeId implements Enumerator
{
  /**
   * The '<em><b>Int8</b></em>' literal object.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #INT8_VALUE
   * @generated
   * @ordered
   */
  INT8(0, "Int8", "Int8"),

  /**
   * The '<em><b>UInt8</b></em>' literal object.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #UINT8_VALUE
   * @generated
   * @ordered
   */
  UINT8(1, "UInt8", "UInt8"),

  /**
   * The '<em><b>Int16</b></em>' literal object.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #INT16_VALUE
   * @generated
   * @ordered
   */
  INT16(2, "Int16", "Int16"),

  /**
   * The '<em><b>UInt16</b></em>' literal object.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #UINT16_VALUE
   * @generated
   * @ordered
   */
  UINT16(3, "UInt16", "UInt16"),

  /**
   * The '<em><b>Int32</b></em>' literal object.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #INT32_VALUE
   * @generated
   * @ordered
   */
  INT32(4, "Int32", "Int32"),

  /**
   * The '<em><b>UInt32</b></em>' literal object.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #UINT32_VALUE
   * @generated
   * @ordered
   */
  UINT32(5, "UInt32", "UInt32"),

  /**
   * The '<em><b>Int64</b></em>' literal object.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #INT64_VALUE
   * @generated
   * @ordered
   */
  INT64(6, "Int64", "Int64"),

  /**
   * The '<em><b>UInt64</b></em>' literal object.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #UINT64_VALUE
   * @generated
   * @ordered
   */
  UINT64(7, "UInt64", "UInt64"),

  /**
   * The '<em><b>Boolean</b></em>' literal object.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #BOOLEAN_VALUE
   * @generated
   * @ordered
   */
  BOOLEAN(8, "Boolean", "Boolean"),

  /**
   * The '<em><b>String</b></em>' literal object.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #STRING_VALUE
   * @generated
   * @ordered
   */
  STRING(9, "String", "String"),

  /**
   * The '<em><b>Float</b></em>' literal object.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #FLOAT_VALUE
   * @generated
   * @ordered
   */
  FLOAT(10, "Float", "Float"),

  /**
   * The '<em><b>Double</b></em>' literal object.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #DOUBLE_VALUE
   * @generated
   * @ordered
   */
  DOUBLE(11, "Double", "Double"),

  /**
   * The '<em><b>Char</b></em>' literal object.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #CHAR_VALUE
   * @generated
   * @ordered
   */
  CHAR(12, "Char", "Char"),

  /**
   * The '<em><b>Byte Buffer</b></em>' literal object.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #BYTE_BUFFER_VALUE
   * @generated
   * @ordered
   */
  BYTE_BUFFER(13, "ByteBuffer", "ByteBuffer");

  /**
   * The '<em><b>Int8</b></em>' literal value.
   * <!-- begin-user-doc -->
   * <p>
   * If the meaning of '<em><b>Int8</b></em>' literal object isn't clear,
   * there really should be more of a description here...
   * </p>
   * <!-- end-user-doc -->
   * @see #INT8
   * @model name="Int8"
   * @generated
   * @ordered
   */
  public static final int INT8_VALUE = 0;

  /**
   * The '<em><b>UInt8</b></em>' literal value.
   * <!-- begin-user-doc -->
   * <p>
   * If the meaning of '<em><b>UInt8</b></em>' literal object isn't clear,
   * there really should be more of a description here...
   * </p>
   * <!-- end-user-doc -->
   * @see #UINT8
   * @model name="UInt8"
   * @generated
   * @ordered
   */
  public static final int UINT8_VALUE = 1;

  /**
   * The '<em><b>Int16</b></em>' literal value.
   * <!-- begin-user-doc -->
   * <p>
   * If the meaning of '<em><b>Int16</b></em>' literal object isn't clear,
   * there really should be more of a description here...
   * </p>
   * <!-- end-user-doc -->
   * @see #INT16
   * @model name="Int16"
   * @generated
   * @ordered
   */
  public static final int INT16_VALUE = 2;

  /**
   * The '<em><b>UInt16</b></em>' literal value.
   * <!-- begin-user-doc -->
   * <p>
   * If the meaning of '<em><b>UInt16</b></em>' literal object isn't clear,
   * there really should be more of a description here...
   * </p>
   * <!-- end-user-doc -->
   * @see #UINT16
   * @model name="UInt16"
   * @generated
   * @ordered
   */
  public static final int UINT16_VALUE = 3;

  /**
   * The '<em><b>Int32</b></em>' literal value.
   * <!-- begin-user-doc -->
   * <p>
   * If the meaning of '<em><b>Int32</b></em>' literal object isn't clear,
   * there really should be more of a description here...
   * </p>
   * <!-- end-user-doc -->
   * @see #INT32
   * @model name="Int32"
   * @generated
   * @ordered
   */
  public static final int INT32_VALUE = 4;

  /**
   * The '<em><b>UInt32</b></em>' literal value.
   * <!-- begin-user-doc -->
   * <p>
   * If the meaning of '<em><b>UInt32</b></em>' literal object isn't clear,
   * there really should be more of a description here...
   * </p>
   * <!-- end-user-doc -->
   * @see #UINT32
   * @model name="UInt32"
   * @generated
   * @ordered
   */
  public static final int UINT32_VALUE = 5;

  /**
   * The '<em><b>Int64</b></em>' literal value.
   * <!-- begin-user-doc -->
   * <p>
   * If the meaning of '<em><b>Int64</b></em>' literal object isn't clear,
   * there really should be more of a description here...
   * </p>
   * <!-- end-user-doc -->
   * @see #INT64
   * @model name="Int64"
   * @generated
   * @ordered
   */
  public static final int INT64_VALUE = 6;

  /**
   * The '<em><b>UInt64</b></em>' literal value.
   * <!-- begin-user-doc -->
   * <p>
   * If the meaning of '<em><b>UInt64</b></em>' literal object isn't clear,
   * there really should be more of a description here...
   * </p>
   * <!-- end-user-doc -->
   * @see #UINT64
   * @model name="UInt64"
   * @generated
   * @ordered
   */
  public static final int UINT64_VALUE = 7;

  /**
   * The '<em><b>Boolean</b></em>' literal value.
   * <!-- begin-user-doc -->
   * <p>
   * If the meaning of '<em><b>Boolean</b></em>' literal object isn't clear,
   * there really should be more of a description here...
   * </p>
   * <!-- end-user-doc -->
   * @see #BOOLEAN
   * @model name="Boolean"
   * @generated
   * @ordered
   */
  public static final int BOOLEAN_VALUE = 8;

  /**
   * The '<em><b>String</b></em>' literal value.
   * <!-- begin-user-doc -->
   * <p>
   * If the meaning of '<em><b>String</b></em>' literal object isn't clear,
   * there really should be more of a description here...
   * </p>
   * <!-- end-user-doc -->
   * @see #STRING
   * @model name="String"
   * @generated
   * @ordered
   */
  public static final int STRING_VALUE = 9;

  /**
   * The '<em><b>Float</b></em>' literal value.
   * <!-- begin-user-doc -->
   * <p>
   * If the meaning of '<em><b>Float</b></em>' literal object isn't clear,
   * there really should be more of a description here...
   * </p>
   * <!-- end-user-doc -->
   * @see #FLOAT
   * @model name="Float"
   * @generated
   * @ordered
   */
  public static final int FLOAT_VALUE = 10;

  /**
   * The '<em><b>Double</b></em>' literal value.
   * <!-- begin-user-doc -->
   * <p>
   * If the meaning of '<em><b>Double</b></em>' literal object isn't clear,
   * there really should be more of a description here...
   * </p>
   * <!-- end-user-doc -->
   * @see #DOUBLE
   * @model name="Double"
   * @generated
   * @ordered
   */
  public static final int DOUBLE_VALUE = 11;

  /**
   * The '<em><b>Char</b></em>' literal value.
   * <!-- begin-user-doc -->
   * <p>
   * If the meaning of '<em><b>Char</b></em>' literal object isn't clear,
   * there really should be more of a description here...
   * </p>
   * <!-- end-user-doc -->
   * @see #CHAR
   * @model name="Char"
   * @generated
   * @ordered
   */
  public static final int CHAR_VALUE = 12;

  /**
   * The '<em><b>Byte Buffer</b></em>' literal value.
   * <!-- begin-user-doc -->
   * <p>
   * If the meaning of '<em><b>Byte Buffer</b></em>' literal object isn't clear,
   * there really should be more of a description here...
   * </p>
   * <!-- end-user-doc -->
   * @see #BYTE_BUFFER
   * @model name="ByteBuffer"
   * @generated
   * @ordered
   */
  public static final int BYTE_BUFFER_VALUE = 13;

  /**
   * An array of all the '<em><b>FBasic Type Id</b></em>' enumerators.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private static final FBasicTypeId[] VALUES_ARRAY =
    new FBasicTypeId[]
    {
      INT8,
      UINT8,
      INT16,
      UINT16,
      INT32,
      UINT32,
      INT64,
      UINT64,
      BOOLEAN,
      STRING,
      FLOAT,
      DOUBLE,
      CHAR,
      BYTE_BUFFER,
    };

  /**
   * A public read-only list of all the '<em><b>FBasic Type Id</b></em>' enumerators.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final List<FBasicTypeId> VALUES = Collections.unmodifiableList(Arrays.asList(VALUES_ARRAY));

  /**
   * Returns the '<em><b>FBasic Type Id</b></em>' literal with the specified literal value.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param literal the literal.
   * @return the matching enumerator or <code>null</code>.
   * @generated
   */
  public static FBasicTypeId get(String literal)
  {
    for (int i = 0; i < VALUES_ARRAY.length; ++i)
    {
      FBasicTypeId result = VALUES_ARRAY[i];
      if (result.toString().equals(literal))
      {
        return result;
      }
    }
    return null;
  }

  /**
   * Returns the '<em><b>FBasic Type Id</b></em>' literal with the specified name.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param name the name.
   * @return the matching enumerator or <code>null</code>.
   * @generated
   */
  public static FBasicTypeId getByName(String name)
  {
    for (int i = 0; i < VALUES_ARRAY.length; ++i)
    {
      FBasicTypeId result = VALUES_ARRAY[i];
      if (result.getName().equals(name))
      {
        return result;
      }
    }
    return null;
  }

  /**
   * Returns the '<em><b>FBasic Type Id</b></em>' literal with the specified integer value.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the integer value.
   * @return the matching enumerator or <code>null</code>.
   * @generated
   */
  public static FBasicTypeId get(int value)
  {
    switch (value)
    {
      case INT8_VALUE: return INT8;
      case UINT8_VALUE: return UINT8;
      case INT16_VALUE: return INT16;
      case UINT16_VALUE: return UINT16;
      case INT32_VALUE: return INT32;
      case UINT32_VALUE: return UINT32;
      case INT64_VALUE: return INT64;
      case UINT64_VALUE: return UINT64;
      case BOOLEAN_VALUE: return BOOLEAN;
      case STRING_VALUE: return STRING;
      case FLOAT_VALUE: return FLOAT;
      case DOUBLE_VALUE: return DOUBLE;
      case CHAR_VALUE: return CHAR;
      case BYTE_BUFFER_VALUE: return BYTE_BUFFER;
    }
    return null;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private final int value;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private final String name;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private final String literal;

  /**
   * Only this class can construct instances.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private FBasicTypeId(int value, String name, String literal)
  {
    this.value = value;
    this.name = name;
    this.literal = literal;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public int getValue()
  {
    return value;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getName()
  {
    return name;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getLiteral()
  {
    return literal;
  }

  /**
   * Returns the literal value of the enumerator, which is its string representation.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    return literal;
  }
  
} //FBasicTypeId
