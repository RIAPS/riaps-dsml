/**
 * generated by Xtext 2.10.0
 */
package edu.vanderbilt.riaps.datatypes.util;

import edu.vanderbilt.riaps.datatypes.*;

import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.ecore.EPackage;

import org.eclipse.emf.ecore.util.Switch;

/**
 * <!-- begin-user-doc -->
 * The <b>Switch</b> for the model's inheritance hierarchy.
 * It supports the call {@link #doSwitch(EObject) doSwitch(object)}
 * to invoke the <code>caseXXX</code> method for each class of the model,
 * starting with the actual class of the object
 * and proceeding up the inheritance hierarchy
 * until a non-null result is returned,
 * which is the result of the switch.
 * <!-- end-user-doc -->
 * @see edu.vanderbilt.riaps.datatypes.DatatypesPackage
 * @generated
 */
public class DatatypesSwitch<T> extends Switch<T>
{
  /**
   * The cached model package
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected static DatatypesPackage modelPackage;

  /**
   * Creates an instance of the switch.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public DatatypesSwitch()
  {
    if (modelPackage == null)
    {
      modelPackage = DatatypesPackage.eINSTANCE;
    }
  }

  /**
   * Checks whether this is a switch for the given package.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param ePackage the package in question.
   * @return whether this is a switch for the given package.
   * @generated
   */
  @Override
  protected boolean isSwitchFor(EPackage ePackage)
  {
    return ePackage == modelPackage;
  }

  /**
   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the first non-null result returned by a <code>caseXXX</code> call.
   * @generated
   */
  @Override
  protected T doSwitch(int classifierID, EObject theEObject)
  {
    switch (classifierID)
    {
      case DatatypesPackage.MDODEL:
      {
        Mdodel mdodel = (Mdodel)theEObject;
        T result = caseMdodel(mdodel);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case DatatypesPackage.IMPORT:
      {
        Import import_ = (Import)theEObject;
        T result = caseImport(import_);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case DatatypesPackage.FTYPE_COLLECTION:
      {
        FTypeCollection fTypeCollection = (FTypeCollection)theEObject;
        T result = caseFTypeCollection(fTypeCollection);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case DatatypesPackage.FMESSAGE:
      {
        FMessage fMessage = (FMessage)theEObject;
        T result = caseFMessage(fMessage);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case DatatypesPackage.FVERSION:
      {
        FVersion fVersion = (FVersion)theEObject;
        T result = caseFVersion(fVersion);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case DatatypesPackage.FTYPE_REF:
      {
        FTypeRef fTypeRef = (FTypeRef)theEObject;
        T result = caseFTypeRef(fTypeRef);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case DatatypesPackage.FTYPE:
      {
        FType fType = (FType)theEObject;
        T result = caseFType(fType);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case DatatypesPackage.FSTRUCT_TYPE:
      {
        FStructType fStructType = (FStructType)theEObject;
        T result = caseFStructType(fStructType);
        if (result == null) result = caseFType(fStructType);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case DatatypesPackage.FENUMERATION_TYPE:
      {
        FEnumerationType fEnumerationType = (FEnumerationType)theEObject;
        T result = caseFEnumerationType(fEnumerationType);
        if (result == null) result = caseFType(fEnumerationType);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case DatatypesPackage.FENUMERATOR:
      {
        FEnumerator fEnumerator = (FEnumerator)theEObject;
        T result = caseFEnumerator(fEnumerator);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case DatatypesPackage.FMAP_TYPE:
      {
        FMapType fMapType = (FMapType)theEObject;
        T result = caseFMapType(fMapType);
        if (result == null) result = caseFType(fMapType);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case DatatypesPackage.FFIELD:
      {
        FField fField = (FField)theEObject;
        T result = caseFField(fField);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case DatatypesPackage.MODEL:
      {
        Model model = (Model)theEObject;
        T result = caseModel(model);
        if (result == null) result = caseMdodel(model);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      default: return defaultCase(theEObject);
    }
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Mdodel</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Mdodel</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseMdodel(Mdodel object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Import</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Import</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseImport(Import object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>FType Collection</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>FType Collection</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseFTypeCollection(FTypeCollection object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>FMessage</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>FMessage</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseFMessage(FMessage object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>FVersion</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>FVersion</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseFVersion(FVersion object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>FType Ref</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>FType Ref</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseFTypeRef(FTypeRef object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>FType</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>FType</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseFType(FType object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>FStruct Type</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>FStruct Type</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseFStructType(FStructType object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>FEnumeration Type</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>FEnumeration Type</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseFEnumerationType(FEnumerationType object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>FEnumerator</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>FEnumerator</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseFEnumerator(FEnumerator object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>FMap Type</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>FMap Type</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseFMapType(FMapType object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>FField</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>FField</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseFField(FField object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Model</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Model</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseModel(Model object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>EObject</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch, but this is the last case anyway.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>EObject</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject)
   * @generated
   */
  @Override
  public T defaultCase(EObject object)
  {
    return null;
  }

} //DatatypesSwitch
